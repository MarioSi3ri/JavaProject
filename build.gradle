plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id "io.freefair.lombok" version "8.4"
	id "org.sonarqube" version "4.4.1.3373"
	id "jacoco"
}

group = 'org.backend.proyecto'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.mysql:mysql-connector-j:8.2.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.0.Final'
	implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.44.1.0'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2:2.2.224'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testImplementation 'org.mockito:mockito-core:3.11.2'
}

tasks.named('test') {
	useJUnitPlatform()

	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'org/backend/proyecto/dto/**',
							'org/backend/proyecto/model/**',
							'org/backend/proyecto/mapper/**',
							'org/backend/proyecto/BackendApplication.class'
					]
			)
		}))
	}
}

// Excluir ciertos paquetes del reporte de coverage
test {
	jacoco {
		excludes = [
				'org.backend.proyecto.dto.*',
				'org.backend.proyectomodel.*',
				'org.backend.proyectomapper.*',
				'org.backend.proyecto.BackendApplication.class'
		]
	}
}

// Al ejecutar "gradle sonar" se ejecuta
// primero "gradle test" (y a su vez ejecuta "gradle jacocoTestReport")
tasks.named('sonar') {
	dependsOn test
}

/*
Este archivo 'build.gradle' es la configuración del proyecto, sus dependencias y los plugins.
Utiliza varias dependencias, incluyendo a Lombok, Hibernate, MapStruct y una base de datos SQLite en combinación con Java y Spring Boot.
*/